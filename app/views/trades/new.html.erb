<div class="row">
  <div class="col-md-8 offset-md-2">
    <div class="card">
      <div class="card-header">
        <h4 class="mb-0">Nova Operação de Trading</h4>
      </div>
      <div class="card-body">
        <%= form_with model: @trade, local: true, id: "new_trade", class: "needs-validation", novalidate: true do |form| %>
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <%= form.label :cryptocurrency_id, "Criptomoeda", class: "form-label" %>
                <%= form.select :cryptocurrency_id, 
                    options_from_collection_for_select(Cryptocurrency.active, :id, :name, @trade.cryptocurrency_id),
                    { prompt: "Selecione uma criptomoeda" },
                    { class: "form-select", required: true } %>
                <div class="invalid-feedback">
                  Por favor, selecione uma criptomoeda.
                </div>
              </div>
            </div>
            
            <div class="col-md-6">
              <div class="mb-3">
                <%= form.label :operation_type, "Tipo de Operação", class: "form-label" %>
                <%= form.select :operation_type, 
                    options_for_select([['Compra', 'buy'], ['Venda', 'sell']], @trade.operation_type),
                    { prompt: "Selecione o tipo" },
                    { class: "form-select", required: true } %>
                <div class="invalid-feedback">
                  Por favor, selecione o tipo de operação.
                </div>
              </div>
            </div>
          </div>
          
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <%= form.label :quantity, "Quantidade", class: "form-label" %>
                <%= form.number_field :quantity, 
                    step: 0.00000001, 
                    min: 0.00000001,
                    class: "form-control", 
                    required: true,
                    placeholder: "0.00000000" %>
                <div class="invalid-feedback">
                  Por favor, insira uma quantidade válida.
                </div>
              </div>
            </div>
            
            <div class="col-md-6">
              <div class="mb-3">
                <%= form.label :unit_price, "Preço Unitário (R$)", class: "form-label" %>
                <%= form.number_field :unit_price, 
                    step: 0.01, 
                    min: 0.01,
                    class: "form-control", 
                    required: true,
                    placeholder: "0.00" %>
                <div class="invalid-feedback">
                  Por favor, insira um preço válido.
                </div>
              </div>
            </div>
          </div>
          
          <div class="mb-3">
            <%= form.label :total_value, "Valor Total (R$)", class: "form-label" %>
            <%= form.number_field :total_value, 
                step: 0.01, 
                min: 0.01,
                class: "form-control", 
                required: true,
                placeholder: "0.00",
                readonly: true %>
            <small class="form-text text-muted">
              Calculado automaticamente: Quantidade × Preço Unitário
            </small>
          </div>
          
          <div class="d-grid gap-2 d-md-flex justify-content-md-end">
            <%= link_to "Cancelar", trades_path, class: "btn btn-secondary me-md-2" %>
            <%= form.submit "Criar Operação", class: "btn btn-primary" %>
          </div>
        <% end %>
      </div>
    </div>
    
    <!-- Resumo das operações abertas -->
    <div class="card mt-4">
      <div class="card-header">
        <h5 class="mb-0">Operações Abertas por Criptomoeda</h5>
      </div>
      <div class="card-body">
        <% if @open_trades_by_crypto.any? %>
          <div class="row">
            <% @open_trades_by_crypto.each do |crypto_name, trades| %>
              <div class="col-md-6 mb-3">
                <div class="border rounded p-3">
                  <h6 class="fw-bold"><%= crypto_name %></h6>
                  <div class="row">
                    <div class="col-6">
                      <small class="text-muted">Compras:</small><br>
                      <span class="badge bg-success"><%= trades.select { |t| t.operation_type == 'buy' }.count %></span>
                    </div>
                    <div class="col-6">
                      <small class="text-muted">Vendas:</small><br>
                      <span class="badge bg-danger"><%= trades.select { |t| t.operation_type == 'sell' }.count %></span>
                    </div>
                  </div>
                </div>
              </div>
            <% end %>
          </div>
        <% else %>
          <p class="text-muted mb-0">Nenhuma operação aberta no momento.</p>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script>
// Validação do formulário Bootstrap
(function() {
  'use strict';
  window.addEventListener('load', function() {
    var forms = document.getElementsByClassName('needs-validation');
    var validation = Array.prototype.filter.call(forms, function(form) {
      form.addEventListener('submit', function(event) {
        if (form.checkValidity() === false) {
          event.preventDefault();
          event.stopPropagation();
        }
        form.classList.add('was-validated');
      }, false);
    });
  }, false);
})();

// Cálculo automático do valor total
function calculateTotalValue() {
  const quantity = parseFloat(document.getElementById('trade_quantity').value) || 0;
  const unitPrice = parseFloat(document.getElementById('trade_unit_price').value) || 0;
  const totalValue = quantity * unitPrice;
  document.getElementById('trade_total_value').value = totalValue.toFixed(2);
}

document.addEventListener('DOMContentLoaded', function() {
  const quantityField = document.getElementById('trade_quantity');
  const unitPriceField = document.getElementById('trade_unit_price');
  
  if (quantityField && unitPriceField) {
    quantityField.addEventListener('input', calculateTotalValue);
    unitPriceField.addEventListener('input', calculateTotalValue);
  }
});
</script>